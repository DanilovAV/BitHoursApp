<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib" >
  
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <FontFamily  x:Key="BaseFontFamily">Tahoma</FontFamily>    
    <system:Double x:Key="BaseFontSize">12</system:Double>

    <Thickness x:Key="BasePadding">0,3,0,4</Thickness>
    <Thickness x:Key="BaseBorderedPadding">4,3,2,4</Thickness>

    <Thickness x:Key="BaseMarginFromBullet">5,0,0,0</Thickness>
    <Thickness x:Key="BaseBorderThickness">1</Thickness>    
    <Thickness x:Key="BaseBorderCorrectionMargin">-1</Thickness>            
    <Thickness x:Key="BaseTextBlockPadding">0,4,0,5</Thickness>
               
    <CornerRadius x:Key="BaseCornerRadius">0</CornerRadius>    
    <VerticalAlignment x:Key="BaseVerticalContentAlignment">Top</VerticalAlignment>        

    <Style x:Key="BitHoursControlBase" TargetType="{x:Type Control}" >    
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="{StaticResource BaseBorderThickness}"/>
        <Setter Property="Padding" Value="{StaticResource BasePadding}"/>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="FieldBorderBase" >
        <Setter Property="CornerRadius" Value="{StaticResource BaseCornerRadius}"/>
    </Style>

    <Style x:Key="BaseTextBlock" TargetType="{x:Type TextBlock}"  >
        <Setter Property="FontSize" Value="{StaticResource BaseFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Setter Property="Padding" Value="{StaticResource BaseTextBlockPadding}"/>
    </Style>

    <Style x:Key="NEWScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">

                    <Grid x:Name="Grid" Background="{TemplateBinding Background}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1"/>
                        
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
							CanContentScroll="{TemplateBinding CanContentScroll}" 
							CanHorizontallyScroll="False" 
							CanVerticallyScroll="False" 
							ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Content="{TemplateBinding Content}"
							Grid.Column="0" 
							Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource BitHoursControlBase}" >
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">                   
                    <Border Background="{TemplateBinding Background}" 
                           BorderBrush="{TemplateBinding BorderBrush}" 
                           BorderThickness="{TemplateBinding BorderThickness}"
                           Padding="{TemplateBinding Padding}"
                           Style="{StaticResource FieldBorderBase}">
                        
                        <ScrollViewer x:Name="PART_ContentHost" 
                                          Style="{StaticResource NEWScrollViewer}"
                                          BorderThickness="0" 
                                          Foreground="{TemplateBinding Foreground}"     
										  Background="Transparent" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Stretch" 
                                          Margin="-2,0" 
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>     
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}" >
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
        <Setter Property="Padding" Value="{StaticResource BaseBorderedPadding}"/>
        <Setter Property="VerticalContentAlignment" Value="{StaticResource BaseVerticalContentAlignment}" />        
        <Style.Triggers>           
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource ControlDisabledBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ControlDisabledForegroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ControlDisabledBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="{StaticResource ControlReadOnlyBackgroundBrush}"/>            
                <Setter Property="BorderBrush" Value="{StaticResource ControlReadOnlyBorderBrush}"/>
            </Trigger>            
        </Style.Triggers>
    </Style>

    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}" >
        <Setter Property="BorderBrush" Value="{StaticResource NormalBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Foreground" Value="{StaticResource GlyphBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="{StaticResource BasePadding}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="White" BorderBrush="{StaticResource NormalBrush}"  BorderThickness="1" Padding="2,0">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DisabledWhiteBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource DisabledNormalBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>     
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2,2,2,2" SnapsToDevicePixels="True"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="24" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Margin" Value="0,0,3,0" />
        <Setter Property="Background" Value="{StaticResource GreyBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GreyBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid x:Name="grid" Width="Auto" Height="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" Width="Auto" Height="Auto" Background="{StaticResource CheckedBrush2}" SnapsToDevicePixels="True" CornerRadius="2,2,2,2" Padding="1,1,1,1" Grid.ColumnSpan="1" BorderThickness="0" >
                            <Border x:Name="border2" Width="Auto" Height="Auto" CornerRadius="1,1,1,1" Padding="1,1,1,1" Background="{StaticResource NormalBrush2}">
                                <Border x:Name="border1" Width="Auto" Height="Auto" CornerRadius="1,1,1,1" BorderBrush="{StaticResource NormalBrush}" Background="{StaticResource NormalBrush1}">
                                    <ContentPresenter 
									    x:Name="content"
  									    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
  									    Margin="4,0,4,0" 
  									    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
  									    SnapsToDevicePixels="True" 
  									    Content="{TemplateBinding Content}" 
  									    ContentStringFormat="{TemplateBinding ContentStringFormat}" 
  									    ContentTemplate="{TemplateBinding ContentTemplate}" 
  									    RecognizesAccessKey="True"
									    />
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource MouseOverBrush2}">
                            </Setter>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MouseOverBrush}"/>
                            <Setter Property="Background" TargetName="border1" Value="{StaticResource MouseOverBrush1}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource PressedBrush2}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PressedBrush}"/>
                            <Setter Property="Background" TargetName="border1" Value="{StaticResource PressedBrush2}"/>
                        </MultiTrigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource CheckedBrush2}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource NormalBrush}"/>
                            <Setter Property="Background" TargetName="border1" Value="{StaticResource CheckedBrush2}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource DisabledNormalBrush2}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledButtonLightBorderBrush}"/>
                            <Setter Property="Background" TargetName="border1" Value="{StaticResource DisabledLightNormalBrush1}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledLightForegroundBrush}"/>
                        </Trigger>
                        <!--544-->
                        <Trigger Property="Padding" Value="2,0,0,2">
                            <Setter Property="CornerRadius" TargetName="border2" Value="1,0,0,1" />
                            <Setter Property="CornerRadius" TargetName="border1" Value="1,0,0,1"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="2,0,0,2"/>
                            <Setter Property="Padding" TargetName="border" Value="1,1,1,1"/>
                        </Trigger>
                        <Trigger Property="Padding" Value="0,2,2,0">
                            <Setter Property="CornerRadius" TargetName="border2" Value="0,1,1,0" />
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,1,1,0"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                            <!--Setter Property="Padding" TargetName="border" Value="0,1,1,1"/-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
      
    </Style>


</ResourceDictionary>